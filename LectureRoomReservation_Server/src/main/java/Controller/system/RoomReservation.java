/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Controller.system;

import java.awt.event.*;
import javax.swing.*;
import java.io.*;
import org.apache.poi.ss.usermodel.*;
import org.apache.poi.xssf.usermodel.*;
/**
 *
 * @author dadad
 */
public class RoomReservation extends javax.swing.JFrame {

    private final String excelFilePath = "src/main/java/db/ReservationSchedule.xlsx";
    /**
     * Creates new form RoomReservation
     */
    public RoomReservation() {
        initComponents();
        
        // ComboTime 초기화
        ComboTime.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {}));
        ComboTime.setEnabled(false); // 선택적: 사용자가 먼저 적용 버튼을 눌러야 선택 가능
    }

        @Override
        protected void processWindowEvent(WindowEvent e) {
        super.processWindowEvent(e);
        if (e.getID() == WindowEvent.WINDOW_OPENED) {
            updateAvailableTimes();
        }
    }

    private void updateAvailableTimes() {
        String selectedRoom = ComboRoomNum.getSelectedItem().toString();
        String selectedDay = ComboDay.getSelectedItem().toString();

        ComboTime.removeAllItems();

        try (FileInputStream fis = new FileInputStream(excelFilePath);
             Workbook workbook = new XSSFWorkbook(fis)) {
            Sheet sheet = workbook.getSheetAt(0);

            for (Row row : sheet) {
                if (row.getRowNum() == 0) continue; // 헤더 건너뛰기

                String room = row.getCell(0).getStringCellValue();
                String day = row.getCell(1).getStringCellValue();
                String time = row.getCell(2).getStringCellValue();
                String availability = row.getCell(3).getStringCellValue();

                if (room.equals(selectedRoom) && day.equals(selectedDay) && availability.equals("가능")) {
                    ComboTime.addItem(time);
                }
            }

        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "엑셀 파일을 읽을 수 없습니다.");
        }
    }

    @Override
    public void setVisible(boolean b) {
        super.setVisible(b);
        updateAvailableTimes();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Title = new javax.swing.JLabel();
        TextRoomNum = new javax.swing.JLabel();
        ComboRoomNum = new javax.swing.JComboBox<>();
        TextDay = new javax.swing.JLabel();
        ComboDay = new javax.swing.JComboBox<>();
        TextTime = new javax.swing.JLabel();
        ComboTime = new javax.swing.JComboBox<>();
        Check = new javax.swing.JButton();
        SitNum = new javax.swing.JButton();
        Cancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Title.setText("강의실 예약");

        TextRoomNum.setText("강의실");

        ComboRoomNum.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "911호", "912호", "913호", "914호", "915호", "916호", "918호" }));
        ComboRoomNum.setToolTipText("");
        ComboRoomNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboRoomNumActionPerformed(evt);
            }
        });

        TextDay.setText("요일");

        ComboDay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "월요일", "화요일", "수요일", "목요일", "금요일" }));

        TextTime.setText("시간");

        ComboTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboTimeActionPerformed(evt);
            }
        });

        Check.setText("적용");
        Check.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckActionPerformed(evt);
            }
        });

        SitNum.setText("좌 석");
        SitNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SitNumActionPerformed(evt);
            }
        });

        Cancel.setText("취 소");
        Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(204, Short.MAX_VALUE)
                .addComponent(SitNum, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(TextRoomNum)
                            .addComponent(TextDay)
                            .addComponent(TextTime))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ComboDay, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Check, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(ComboRoomNum, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ComboTime, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(Title, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(Title)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ComboRoomNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TextRoomNum))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ComboDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TextDay)
                    .addComponent(Check))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ComboTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TextTime))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SitNum)
                    .addComponent(Cancel))
                .addGap(38, 38, 38))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ComboTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboTimeActionPerformed

    private void CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelActionPerformed
        int result = JOptionPane.showConfirmDialog(this, "예약을 중단하시겠습니까?", "확인", JOptionPane.YES_NO_OPTION);
        if (result == JOptionPane.YES_OPTION) {
        this.dispose();
}
    }//GEN-LAST:event_CancelActionPerformed

    private void ComboRoomNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboRoomNumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboRoomNumActionPerformed

    private void SitNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SitNumActionPerformed
        SitNum.addActionListener((var evt1) -> {
            handleReservation(); // 여기서 호출해줘야 함
        });

    }//GEN-LAST:event_SitNumActionPerformed

    private void CheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckActionPerformed
        updateAvailableTimes();
        ComboTime.setEnabled(true);
    }//GEN-LAST:event_CheckActionPerformed

        private void handleReservation() {
        String room = ComboRoomNum.getSelectedItem().toString();
        String day = ComboDay.getSelectedItem().toString();
        String time = ComboTime.getSelectedItem().toString();

        try (FileInputStream fis = new FileInputStream(excelFilePath);
             Workbook workbook = new XSSFWorkbook(fis)) {

            Sheet sheet = workbook.getSheetAt(0);

            for (Row row : sheet) {
                if (row.getRowNum() == 0) continue;

                String r = row.getCell(0).getStringCellValue();
                String d = row.getCell(1).getStringCellValue();
                String t = row.getCell(2).getStringCellValue();
                String available = row.getCell(3).getStringCellValue();

                if (r.equals(room) && d.equals(day) && t.equals(time) && available.trim().equals("가능")) {
                    Cell remarkCell = row.getCell(8); // 비고
                    if (remarkCell == null) {
                        remarkCell = row.createCell(8);
                    }
                    remarkCell.setCellValue("ABC");

                    try ( // 저장
                            FileOutputStream fos = new FileOutputStream(excelFilePath)) {
                        workbook.write(fos);
                    }

                    JOptionPane.showMessageDialog(this, "예약이 완료되었습니다.");
                    updateAvailableTimes(); // 목록 새로고침
                    return;
                }
            }

            JOptionPane.showMessageDialog(this, "예약할 수 없습니다.");

        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "엑셀 파일 오류: " + e.getMessage());
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RoomReservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RoomReservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RoomReservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RoomReservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RoomReservation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Cancel;
    private javax.swing.JButton Check;
    private javax.swing.JComboBox<String> ComboDay;
    private javax.swing.JComboBox<String> ComboRoomNum;
    private javax.swing.JComboBox<String> ComboTime;
    private javax.swing.JButton SitNum;
    private javax.swing.JLabel TextDay;
    private javax.swing.JLabel TextRoomNum;
    private javax.swing.JLabel TextTime;
    private javax.swing.JLabel Title;
    // End of variables declaration//GEN-END:variables
}
